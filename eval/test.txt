def save_sectionwise_debug_report(
    section_data: Dict[str, List[AlignedPair]],
    filepath: Path
) -> None:
    """
    Saves a detailed, multi-sheet Excel debug report with one sheet per ToC section.
    """
    if not section_data:
        print("Warning: No section data provided for the debug report.")
        return

    try:
        with pd.ExcelWriter(filepath, engine='openpyxl') as writer:
            
            # --- FIX: Use a counter for sheet names ---
            sheet_index = 1
            
            for section_title, aligned_pairs in section_data.items():
                
                # Use a safe, unique sheet name
                safe_sheet_name = f"Section_{sheet_index}"
                sheet_index += 1
                
                if not aligned_pairs:
                    continue

                report_data = []
                for pair in aligned_pairs:
                    # (Your existing logic for appending row data)
                    eng_item = pair.get('english')
                    ger_item = pair.get('german')
                    report_data.append({
                        "English Text": eng_item.get('text', '') if eng_item else "--- OMITTED ---",
                        "German Text": ger_item.get('text', '') if ger_item else "--- ADDED ---",
                        "Cosine Similarity": f"{pair.get('similarity', 0.0):.4f}",
                        "Margin Score": f"{pair.get('margin_score', 0.0):.4f}",
                        "Content Type": (eng_item.get('type') if eng_item else ger_item.get('type', 'N/A')),
                        "English Page": (eng_item.get('page') if eng_item else 'N/A'),
                        "German Page": (ger_item.get('page') if ger_item else 'N/A')
                    })
                
                df_section = pd.DataFrame(report_data)
                
                # --- FIX: Write to the new sheet name ---
                df_section.to_excel(writer, sheet_name=safe_sheet_name, index=False, startrow=2)
                
                # --- (Optional but recommended) Add the title back in ---
                try:
                    worksheet = writer.sheets[safe_sheet_name]
                    worksheet['A1'] = f"Section Title: {section_title}"
                except Exception:
                    pass # Failsafe if we can't get the sheet

        print(f"-> Section-wise debug report saved to: {filepath.resolve()}")
    except Exception as e:
        print(f"Error: Could not write section-wise debug report to '{filepath}'. Reason: {e}")
